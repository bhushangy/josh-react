<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      rel="stylesheet"
      href="/_next/static/css/app/exercises/01-screensaver/layout.css?v=1735650855064"
      data-precedence="next_static/css/app/exercises/01-screensaver/layout.css"
    />
    <link
      rel="stylesheet"
      href="/_next/static/css/app/exercises/01-screensaver/%5Bcolor%5D/page.css?v=1735650855064"
      data-precedence="next_static/css/app/exercises/01-screensaver/[color]/page.css"
    />
    <link
      rel="preload"
      as="script"
      fetchPriority="low"
      href="/_next/static/chunks/webpack.js?v=1735650855064"
    />
    <script
      src="/_next/static/chunks/main-app.js?v=1735650855064"
      async=""
    ></script>
    <script src="/_next/static/chunks/app-pages-internals.js" async=""></script>
    <script
      src="/_next/static/chunks/app/exercises/01-screensaver/%5Bcolor%5D/page.js"
      async=""
    ></script>
    <script src="/_next/static/chunks/polyfills.js" nomodule=""></script>
  </head>
  <body>
    <svg
      class="ScreenSaver_wrapper__8iyB_"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 210 107"
      style="top: 122px; left: 100px"
    >
      <path
        d="M118.895 20.346s-13.743 16.922-13.04 18.001c.975-1.079-4.934-18.186-4.934-18.186s-1.233-3.597-5.102-15.387H22.175l-2.56 11.068h23.878c12.415 0 19.995 5.132 17.878 14.225-2.287 9.901-13.123 14.128-24.665 14.128H32.39l5.552-24.208H18.647l-8.192 35.368h27.398c20.612 0 40.166-11.067 43.692-25.288.617-2.614.53-9.185-1.054-13.053 0-.093-.091-.271-.178-.537-.087-.093-.178-.722.178-.814.172-.092.525.271.525.358 0 0 .179.456.351.813l17.44 50.315 44.404-51.216 18.761-.092h4.579c12.424 0 20.09 5.132 17.969 14.225-2.29 9.901-13.205 14.128-24.75 14.128h-4.405L161 19.987h-19.287l-8.198 35.368h27.398c20.611 0 40.343-11.067 43.604-25.288 3.347-14.225-11.101-25.293-31.89-25.293H131.757c-10.834 13.049-12.862 15.572-12.862 15.572zM99.424 67.329C47.281 67.329 5 73.449 5 81.012 5 88.57 47.281 94.69 99.424 94.69c52.239 0 94.524-6.12 94.524-13.678.001-7.563-42.284-13.683-94.524-13.683zm-3.346 18.544c-11.98 0-21.58-2.072-21.58-4.595 0-2.523 9.599-4.59 21.58-4.59 11.888 0 21.498 2.066 21.498 4.59 0 2.523-9.61 4.595-21.498 4.595z"
        fill="aliceblue"
      ></path>
    </svg>
    <script
      src="/_next/static/chunks/webpack.js?v=1735650855064"
      async=""
    ></script>
    <script>
      (self.__next_f = self.__next_f || []).push([0]);
    </script>
    <script>
      self.__next_f.push([
        1,
        '5:"$Sreact.fragment"\n6:I["(app-pages-browser)/./node_modules/next/dist/client/components/layout-router.js",["app-pages-internals","static/chunks/app-pages-internals.js"],""]\n7:I["(app-pages-browser)/./node_modules/next/dist/client/components/render-from-template-context.js",["app-pages-internals","static/chunks/app-pages-internals.js"],""]\n10:I["(app-pages-browser)/./src/components/ScreenSaver/ScreenSaver.js",["app/exercises/01-screensaver/[color]/page","static/chunks/app/exercises/01-screensaver/%5Bcolor%5D/page.js"],"default"]\n11:I["(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-boundary.js",["app-pages-internals","static/chunks/app-pages-internals.js"],"OutletBoundary"]\n15:I["(app-pages-browser)/./node_modules/next/dist/client/components/error-boundary.js",["app-pages-internals","static/chunks/app-pages-internals.js"],""]\n16:I["(app-pages-browser)/./node_modules/next/dist/client/components/client-page.js",["app-pages-internals","static/chunks/app-pages-internals.js"],"ClientPageRoot"]\n17:I["(app-pages-browser)/./node_modules/next/dist/client/components/client-segment.js",["app-pages-internals","static/chunks/app-pages-internals.js"],"ClientSegmentRoot"]\n18:I["(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-boundary.js",["app-pages-internals","static/chunks/app-pages-internals.js"],"MetadataBoundary"]\n19:I["(app-pages-browser)/./node_modules/next/dist/client/components/not-found-boundary.js",["app-pages-internals","static/chunks/app-pages-internals.js"],"NotFoundBoundary"]\n1a:I["(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-boundary.js",["app-pages-internals","static/chunks/app-pages-internals.js"],"ViewportBoundary"]\n3:HL["/_next/static/css/app/exercises/01-screensaver/layout.css?v=1735650855064","style"]\n4:HL["/_next/static/css/app/exercises/01-screensaver/%5Bcolor%5D/page.css?v=1735650855064","style"]\n2:{"name":"Preloads","env":"Server","key":null,"owner":null,"props":{"preloadCallbacks":["$E(()=\u003e{ctx.componentMod.preloadStyle(fullHref,ctx.renderOpt',
      ]);
    </script>
    <script>
      self.__next_f.push([
        1,
        's.crossOrigin,ctx.nonce)})","$E(()=\u003e{ctx.componentMod.preloadStyle(fullHref,ctx.renderOpts.crossOrigin,ctx.nonce)})"]}}\n1:D"$2"\n1:null\n9:{"name":"NotFound","env":"Server","key":null,"owner":null,"props":{}}\n8:D"$9"\n8:[["$","title",null,{"children":"404: This page could not be found."},"$9"],["$","div",null,{"style":{"fontFamily":"system-ui,\\"Segoe UI\\",Roboto,Helvetica,Arial,sans-serif,\\"Apple Color Emoji\\",\\"Segoe UI Emoji\\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}},"$9"],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"},"$9"],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."},"$9"]},"$9"]]},"$9"]},"$9"]]\nb:{"name":"ScreenSaverLayout","env":"Server","key":null,"owner":null,"props":{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","exercises","children","01-screensaver","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$5",null,{"children":["$","$L7",null,{},null]},null],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"},null],"params":"$@"}}\na:D"$b"\na:["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","exercises","children","01-screensaver","children"],"error":"$u',
      ]);
    </script>
    <script>
      self.__next_f.push([
        1,
        'ndefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{},null],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"},null]},"$b"]},"$b"]\nd:{"name":"Color","env":"Server","key":null,"owner":null,"props":{"params":"$@","searchParams":"$@"}}\nc:D"$d"\nf:{"message":"Route \\"/exercises/01-screensaver/[color]\\" used `params.color`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis","stack":[["Color","webpack-internal:///(rsc)/./src/app/exercises/01-screensaver/[color]/page.js",11,13]],"env":"Server"}\ne:W["warn",[["Color","webpack-internal:///(rsc)/./src/app/exercises/01-screensaver/[color]/page.js",11,13]],"$d","Server","$Zf"]\nc:["$","$L10",null,{"color":"aliceblue"},"$d"]\n13:{"name":"__next_outlet_boundary__","env":"Server","key":null,"owner":null,"props":{"ready":"$E(async function getMetadataAndViewportReady() {\\n        await viewport();\\n        await metadata();\\n        return undefined;\\n    })"}}\n12:D"$13"\n',
      ]);
    </script>
    <script>
      self.__next_f.push([
        1,
        '1b:{"name":"NonIndex","env":"Server","key":null,"owner":null,"props":{"ctx":{"componentMod":{"GlobalError":"$15","__next_app__":{"require":"$E(function __webpack_require__(moduleId) {\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tvar cachedModule = __webpack_module_cache__[moduleId];\\n/******/ \\t\\tif (cachedModule !== undefined) {\\n/******/ \\t\\t\\treturn cachedModule.exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = __webpack_module_cache__[moduleId] = {\\n/******/ \\t\\t\\tid: moduleId,\\n/******/ \\t\\t\\tloaded: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/ \\t\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tvar threw = true;\\n/******/ \\t\\ttry {\\n/******/ \\t\\t\\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\\n/******/ \\t\\t\\tthrew = false;\\n/******/ \\t\\t} finally {\\n/******/ \\t\\t\\tif(threw) delete __webpack_module_cache__[moduleId];\\n/******/ \\t\\t}\\n/******/ \\t\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.loaded = true;\\n/******/ \\t\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t})","loadChunk":"$E(() =\u003e Promise.resolve())"},"pages":["/Users/bhushangy/Development/full-stack-react/next-routing-exercises/src/app/exercises/01-screensaver/[color]/page.js"],"routeModule":{"userland":{"loaderTree":["",{"children":"$Y"},"$Y"]},"definition":"$Y"},"tree":"$Y","ClientPageRoot":"$16","ClientSegmentRoot":"$17","LayoutRouter":"$6","MetadataBoundary":"$18","NotFoundBoundary":"$19","OutletBoundary":"$11","Postpone":"$E(function Postpone({ reason, route }) {\\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\\n    const dynamicTracking = prerenderStore \u0026\u0026 prerenderStore.type === \'prerender-ppr\' ? prerenderStore.dynamicTracking : null;\\n    postponeWithTracking(route, reason, dynamicTracking);\\n})","RenderFromTemplateContext":"$7","ViewportBoundary":"$1a","actionAsyncStorage":"$Y","collectSegmentData":"$E(async function collectSegmentData(fullPageDataBuffer, staleTime, clientModules, serverConsumerManifest) {\\n    // Traverse the router tree and generate a prefetch response for each segment.\\n    // A mutable map to collect the results as we traverse the route tree.\\n    const resultMap = new Map();\\n    // Before we start, warm up the module cache by decoding the page data once.\\n    // Then we can assume that any remaining async tasks that occur the next time\\n    // are due to hanging promises caused by dynamic data access. Note we only\\n    // have to do this once per page, not per individual segment.\\n    //\\n    try {\\n        await (0, _clientedge.createFromReadableStream)((0, _nodewebstreamshelper.streamFromBuffer)(fullPageDataBuffer), {\\n            serverConsumerManifest\\n        });\\n        await (0, _scheduler.waitAtLeastOneReactRenderTask)();\\n    } catch  {}\\n    // Generate a stream for the route tree prefetch. While we\'re walking the\\n    // tree, we\'ll also spawn additional tasks to generate the segment prefetches.\\n    // The promises for these tasks are pushed to a mutable array that we will\\n    // await once the route tree is fully rendered.\\n    const segmentTasks = [];\\n    const treeStream = await (0, _serveredge.renderToReadableStream)(// RootTreePrefetch is not a valid return type for a React component, but\\n    // we need to use a component so that when we decode the original stream\\n    // inside of it, the side effects are transferred to the new stream.\\n    // @ts-expect-error\\n    /*#__PURE__*/ (0, _jsxruntime.jsx)(PrefetchTreeData, {\\n        fullPageDataBuffer: fullPageDataBuffer,\\n        serverConsumerManifest: serverConsumerManifest,\\n        clientModules: clientModules,\\n        staleTime: staleTime,\\n        segmentTasks: segmentTasks\\n    }), clientModules, {\\n        // Unlike when rendering the segment streams, we do not pass an abort\\n        // controller here. There\'s nothing dynamic in the prefetch metadata; we\\n        // will always render the result. We do still have to account for hanging\\n        // promises, but we use a different strategy. See PrefetchTreeData.\\n        onError () {\\n        // Ignore any errors. These would have already been reported when\\n        // we created the full page data.\\n        }\\n    });\\n    // Write the route tree to a special `/_tree` segment.\\n    const treeBuffer = await (0, _nodewebstreamshelper.streamToBuffer)(treeStream);\\n    resultMap.set(\'/_tree\', treeBuffer);\\n    // Now that we\'ve finished rendering the route tree, all the segment tasks\\n    // should have been spawned. Await them in parallel and write the segment\\n    // prefetches to the result map.\\n    for (const [segmentPath, buffer] of (await Promise.all(segmentTasks))){\\n        resultMap.set(segmentPath, buffer);\\n    }\\n    return resultMap;\\n})","createMetadataComponents":"$E(function createMetadataComponents({ tree, searchParams, metadataContext, getDynamicParamFromSegment, appUsingSizeAdjustment, errorType, createServerParamsForMetadata, workStore, MetadataBoundary, ViewportBoundary }) {\\n    function MetadataRoot() {\\n        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {\\n            children: [\\n                /*#__PURE__*/ (0, _jsxruntime.jsx)(MetadataBoundary, {\\n                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Metadata, {})\\n                }),\\n                /*#__PURE__*/ (0, _jsxruntime.jsx)(ViewportBoundary, {\\n                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Viewport, {})\\n                }),\\n                appUsingSizeAdjustment ? /*#__PURE__*/ (0, _jsxruntime.jsx)(\\"meta\\", {\\n                    name: \\"next-size-adjust\\"\\n                }) : null\\n            ]\\n        });\\n    }\\n    async function viewport() {\\n        return getResolvedViewport(tree, searchParams, getDynamicParamFromSegment, createServerParamsForMetadata, workStore, errorType);\\n    }\\n    async function Viewport() {\\n        try {\\n            return await viewport();\\n        } catch (error) {\\n            if (!errorType \u0026\u0026 (0, _notfound.isNotFoundError)(error)) {\\n                try {\\n                    return await getNotFoundViewport(tree, searchParams, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\\n                } catch  {}\\n            }\\n            // We don\'t actually want to error in this component. We will\\n            // also error in the MetadataOutlet which causes the error to\\n            // bubble from the right position in the page to be caught by the\\n            // appropriate boundaries\\n            return null;\\n        }\\n    }\\n    Viewport.displayName = _metadataconstants.VIEWPORT_BOUNDARY_NAME;\\n    async function metadata() {\\n        return getResolvedMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, createServerParamsForMetadata, workStore, errorType);\\n    }\\n    async function Metadata() {\\n        try {\\n            return await metadata();\\n        } catch (error) {\\n            if (!errorType \u0026\u0026 (0, _notfound.isNotFoundError)(error)) {\\n                try {\\n                    return await getNotFoundMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, createServerParamsForMetadata, workStore);\\n                } catch  {}\\n            }\\n            // We don\'t actually want to error in this component. We will\\n            // also error in the MetadataOutlet which causes the error to\\n            // bubble from the right position in the page to be caught by the\\n            // appropriate boundaries\\n            return null;\\n        }\\n    }\\n    Metadata.displayName = _metadataconstants.METADATA_BOUNDARY_NAME;\\n    async function getMetadataAndViewportReady() {\\n        await viewport();\\n        await metadata();\\n        return undefined;\\n    }\\n    return [\\n        MetadataRoot,\\n        getMetadataAndViewportReady\\n    ];\\n})","createPrerenderParamsForClientSegment":"$E(function createPrerenderParamsForClientSegment(underlyingParams, workStore) {\\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\\n    if (prerenderStore \u0026\u0026 prerenderStore.type === \'prerender\') {\\n        const fallbackParams = workStore.fallbackRouteParams;\\n        if (fallbackParams) {\\n            for(let key in underlyingParams){\\n                if (fallbackParams.has(key)) {\\n                    // This params object has one of more fallback params so we need to consider\\n                    // the awaiting of this params object \\"dynamic\\". Since we are in dynamicIO mode\\n                    // we encode this as a promise that never resolves\\n                    return (0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, \'`params`\');\\n                }\\n            }\\n        }\\n    }\\n    // We\'re prerendering in a mode that does not abort. We resolve the promise without\\n    // any tracking because we\'re just transporting a value from server to client where the tracking\\n    // will be applied.\\n    return Promise.resolve(underlyingParams);\\n})","createPrerenderSearchParamsForClientPage":"$E(function createPrerenderSearchParamsForClientPage(workStore) {\\n    if (workStore.forceStatic) {\\n        // When using forceStatic we override all other logic and always just return an empty\\n        // dictionary object.\\n        return Promise.resolve({});\\n    }\\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\\n    if (prerenderStore \u0026\u0026 prerenderStore.type === \'prerender\') {\\n        // dynamicIO Prerender\\n        // We\'re prerendering in a mode that aborts (dynamicIO) and should stall\\n        // the promise to ensure the RSC side is considered dynamic\\n        return (0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, \'`searchParams`\');\\n    }\\n    // We\'re prerendering in a mode that does not aborts. We resolve the promise without\\n    // any tracking because we\'re just transporting a value from server to client where the tracking\\n    // will be applied.\\n    return Promise.resolve({});\\n})","createServerParamsForMetadata":"$E(function createServerParamsForServerSegment(underlyingParams, workStore) {\\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\\n    if (workUnitStore) {\\n        switch(workUnitStore.type){\\n            case \'prerender\':\\n            case \'prerender-ppr\':\\n            case \'prerender-legacy\':\\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\\n            default:\\n        }\\n    }\\n    return createRenderParams(underlyingParams, workStore);\\n})","createServerParamsForServerSegment":"$E(function createServerParamsForServerSegment(underlyingParams, workStore) {\\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\\n    if (workUnitStore) {\\n        switch(workUnitStore.type){\\n            case \'prerender\':\\n            case \'prerender-ppr\':\\n            case \'prerender-legacy\':\\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\\n            default:\\n        }\\n    }\\n    return createRenderParams(underlyingParams, workStore);\\n})","createServerSearchParamsForMetadata":"$E(function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\\n    if (workUnitStore) {\\n        switch(workUnitStore.type){\\n            case \'prerender\':\\n            case \'prerender-ppr\':\\n            case \'prerender-legacy\':\\n                return createPrerenderSearchParams(workStore, workUnitStore);\\n            default:\\n        }\\n    }\\n    return createRenderSearchParams(underlyingSearchParams, workStore);\\n})","createServerSearchParamsForServerPage":"$E(function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\\n    if (workUnitStore) {\\n        switch(workUnitStore.type){\\n            case \'prerender\':\\n            case \'prerender-ppr\':\\n            case \'prerender-legacy\':\\n                return createPrerenderSearchParams(workStore, workUnitStore);\\n            default:\\n        }\\n    }\\n    return createRenderSearchParams(underlyingSearchParams, workStore);\\n})","createTemporaryReferenceSet":"$E(function(){return new WeakMap})","decodeAction":"$E(function(body,serverManifest){var formData=new FormData,action=null;return body.forEach(function(value1,key){key.startsWith(\\"$ACTION_\\")?key.startsWith(\\"$ACTION_REF_\\")?(value1=decodeBoundActionMetaData(body,serverManifest,value1=\\"$ACTION_\\"+key.slice(12)+\\":\\"),action=loadServerReference(serverManifest,value1.id,value1.bound)):key.startsWith(\\"$ACTION_ID_\\")\u0026\u0026(action=loadServerReference(serverManifest,value1=key.slice(11),null)):formData.append(key,value1)}),null===action?null:action.then(function(fn){return fn.bind(null,formData)})})","decodeFormState":"$E(function(actionResult,body,serverManifest){var keyPath=body.get(\\"$ACTION_KEY\\");if(\\"string\\"!=typeof keyPath)return Promise.resolve(null);var metaData=null;if(body.forEach(function(value1,key){key.startsWith(\\"$ACTION_REF_\\")\u0026\u0026(metaData=decodeBoundActionMetaData(body,serverManifest,\\"$ACTION_\\"+key.slice(12)+\\":\\"))}),null===metaData)return Promise.resolve(null);var referenceId=metaData.id;return Promise.resolve(metaData.bound).then(function(bound){return null===bound?null:[actionResult,keyPath,referenceId,bound.length-1]})})","decodeReply":"$E(function(body,webpackMap,options){if(\\"string\\"==typeof body){var form=new FormData;form.append(\\"0\\",body),body=form}return webpackMap=getChunk(body=createResponse(webpackMap,\\"\\",options?options.temporaryReferences:void 0,body),0),close(body),webpackMap})","patchFetch":"$E(function patchFetch() {\\n    return (0, _patchfetch.patchFetch)({\\n        workAsyncStorage: _workasyncstorageexternal.workAsyncStorage,\\n        workUnitAsyncStorage: _workunitasyncstorageexternal.workUnitAsyncStorage\\n    });\\n})","preconnect":"$E(function preconnect(href, crossOrigin, nonce) {\\n    const opts = {};\\n    if (typeof crossOrigin === \'string\') {\\n        opts.crossOrigin = crossOrigin;\\n    }\\n    if (typeof nonce === \'string\') {\\n        opts.nonce = nonce;\\n    }\\n    _reactdom.default.preconnect(href, opts);\\n})","preloadFont":"$E(function preloadFont(href, type, crossOrigin, nonce) {\\n    const opts = {\\n        as: \'font\',\\n        type\\n    };\\n    if (typeof crossOrigin === \'string\') {\\n        opts.crossOrigin = crossOrigin;\\n    }\\n    if (typeof nonce === \'string\') {\\n        opts.nonce = nonce;\\n    }\\n    _reactdom.default.preload(href, opts);\\n})","preloadStyle":"$E(function preloadStyle(href, crossOrigin, nonce) {\\n    const opts = {\\n        as: \'style\'\\n    };\\n    if (typeof crossOrigin === \'string\') {\\n        opts.crossOrigin = crossOrigin;\\n    }\\n    if (typeof nonce === \'string\') {\\n        opts.nonce = nonce;\\n    }\\n    _reactdom.default.preload(href, opts);\\n})","prerender":"$undefined","renderToReadableStream":"$E(function(model,webpackMap,options){var request=new RequestInstance(20,model,webpackMap,options?options.onError:void 0,options?options.identifierPrefix:void 0,options?options.onPostpone:void 0,options?options.temporaryReferences:void 0,options?options.environmentName:void 0,options?options.filterStackFrame:void 0,noop,noop);if(options\u0026\u0026options.signal){var signal=options.signal;if(signal.aborted)abort(request,signal.reason);else{var listener=function(){abort(request,signal.reason),signal.removeEventListener(\\"abort\\",listener)};signal.addEventListener(\\"abort\\",listener)}}return new ReadableStream({type:\\"bytes\\",start:function(){request.flushScheduled=null!==request.destination,supportsRequestStorage?scheduleMicrotask(function(){requestStorage.run(request,performWork,request)}):scheduleMicrotask(function(){return performWork(request)}),setTimeoutOrImmediate(function(){request.status===OPENING\u0026\u0026(request.status=11)},0)},pull:function(controller){if(request.status===CLOSING)request.status=CLOSED,closeWithError(controller,request.fatalError);else if(request.status!==CLOSED\u0026\u0026null===request.destination){request.destination=controller;try{flushCompletedChunks(request,controller)}catch(error){logRecoverableError(request,error,null),fatalError(request,error)}}},cancel:function(reason){request.destination=null,abort(request,reason)}},{highWaterMark:0})})","serverHooks":"$Y","taintObjectReference":"$E(function notImplemented() {\\n    throw new Error(\'Taint can only be used with the taint flag.\');\\n})","workAsyncStorage":"$Y","workUnitAsyncStorage":"$Y"},"url":"$Y","renderOpts":"$Y","workStore":"$Y","parsedRequestHeaders":"$Y","getDynamicParamFromSegment":"$E(function(segment){let segmentParam=getSegmentParam(segment);if(!segmentParam)return null;let key=segmentParam.param,value1=params[key];if(fallbackRouteParams\u0026\u0026fallbackRouteParams.has(segmentParam.param)?value1=fallbackRouteParams.get(segmentParam.param):Array.isArray(value1)?value1=value1.map(i=\u003eencodeURIComponent(i)):\\"string\\"==typeof value1\u0026\u0026(value1=encodeURIComponent(value1)),!value1){let isCatchall=\\"catchall\\"===segmentParam.type,isOptionalCatchall=\\"optional-catchall\\"===segmentParam.type;if(isCatchall||isOptionalCatchall){let dynamicParamType=dynamicParamTypes[segmentParam.type];return isOptionalCatchall?{param:key,value:null,type:dynamicParamType,treeSegment:[key,\\"\\",dynamicParamType]}:{param:key,value:value1=pagePath.split(\\"/\\").slice(1).flatMap(pathSegment=\u003e{let param=function(param){let match=param.match(PARAMETER_PATTERN);return match?parseMatchedParameter(match[1]):parseMatchedParameter(param)}(pathSegment);return params[param.key]??param.key}),type:dynamicParamType,treeSegment:[key,value1.join(\\"/\\"),dynamicParamType]}}}let type=function(type){let short=dynamicParamTypes[type];if(!short)throw Error(\\"Unknown dynamic param type\\");return short}(segmentParam.type);return{param:key,value:value1,treeSegment:[key,Array.isArray(value1)?value1.join(\\"/\\"):value1,type],type:type}})","query":"$Y","isPrefetch":false,"isAction":false,"requestTimestamp":1735650855064,"appUsingSizeAdjustment":false,"flightRouterState":"$undefined","requestId":"eSWsjtKvIv-2raKyGS3Av","pagePath":"/exercises/01-screensaver/[color]","clientReferenceManifest":"$Y","assetPrefix":"","isNotFoundPath":false,"nonce":"$undefined","res":"$Y"}}}\n',
      ]);
    </script>
    <script>
      self.__next_f.push([
        1,
        '14:D"$1b"\n14:null\n1d:{"name":"MetadataRoot","env":"Server","key":"eSWsjtKvIv-2raKyGS3Av","owner":null,"props":{}}\n1c:D"$1d"\n1f:{"name":"__next_metadata_boundary__","env":"Server","key":null,"owner":"$1d","props":{}}\n1e:D"$1f"\n21:{"name":"__next_viewport_boundary__","env":"Server","key":null,"owner":"$1d","props":{}}\n20:D"$21"\n1c:["$","$5","eSWsjtKvIv-2raKyGS3Av",{"children":[["$","$L18",null,{"children":"$L1e"},"$1d"],["$","$L1a",null,{"children":"$L20"},"$1d"],null]},null]\n22:[]\n',
      ]);
    </script>
    <script>
      self.__next_f.push([
        1,
        '0:{"P":"$1","b":"development","p":"","c":["","exercises","01-screensaver","aliceblue"],"i":false,"f":[[["",{"children":["exercises",{"children":["01-screensaver",{"children":[["color","aliceblue","d"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true]}]}],["",["$","$5","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{},null],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$8","notFoundStyles":[]},null]]},null],{"children":["exercises",["$","$5","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","exercises","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{},null],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"},null]]},null],{"children":["01-screensaver",["$","$5","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/app/exercises/01-screensaver/layout.css?v=1735650855064","precedence":"next_static/css/app/exercises/01-screensaver/layout.css","crossOrigin":"$undefined","nonce":"$undefined"},null]],"$a"]},null],{"children":[["color","aliceblue","d"],["$","$5","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","exercises","children","01-screensaver","children","$0:f:0:1:2:children:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{},null],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"},null]]},null],{"children":["__PAGE__",["$","$5","c",{"children":["$c",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/app/exercises/01-screensaver/%5Bcolor%5D/page.css?v=1735650855064","precedence":"next_static/css/app/exercises/01-screensaver/[color]/page.css","crossOrigin":"$undefined","nonce":"$undefined"},null]],["$","$L11",null,{"children":"$L12"},null]]},null],{},null]},null]},null]},null]},null],["$","$5","h",{"children":["$14","$1c"]},null]]],"m":"$W22","G":["$15","$undefined"],"s":false,"S":false}\n',
      ]);
    </script>
    <script>
      self.__next_f.push([
        1,
        '20:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"},"$13"]]\n1e:[["$","meta","0",{"charSet":"utf-8"},"$1f"]]\n12:null\n',
      ]);
    </script>
  </body>
</html>
